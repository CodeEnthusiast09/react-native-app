import { useSignIn, useSignUp } from "@/hooks/services";
import { signInValidationSchema, signUpValidationSchema } from "@/validations";
import { useState } from "react";
import { KeyboardAvoidingView, Platform, View } from "react-native";
import { Button, Text, TextInput } from "react-native-paper";
import { InferType } from "yup";
import { styles } from "../styles/auth-styles";

type SignInValues = InferType<typeof signInValidationSchema>;

type SignUpValues = InferType<typeof signUpValidationSchema>;

type FormValues = SignInValues | SignUpValues;

export default function AuthScreen() {
  const [isSignUp, setIsSignUp] = useState<boolean>(false);

  const { mutate: signUp, isPending: isSubmitting } = useSignUp();

  const { mutate: signIn, isPending: isSubmitting } = useSignIn();

  const {};

  const handleSwitchAuthScreen = () => {
    setIsSignUp((prev) => !prev);
  };

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={styles.container}
    >
      <View style={styles.content}>
        <Text style={styles.title} variant="headlineMedium">
          {isSignUp ? "Create account" : "Welcome Back"}
        </Text>

        <TextInput
          label="Email"
          autoCapitalize="none"
          keyboardType="email-address"
          placeholder="example@gmail.com"
          mode="outlined"
          style={styles.input}
        />

        <TextInput
          label="Password"
          autoCapitalize="none"
          mode="outlined"
          style={styles.input}
        />

        <Button mode="contained" style={styles.button}>
          {isSignUp ? "Sign up" : "Sign in"}
        </Button>

        <Button
          mode="text"
          onPress={() => handleSwitchAuthScreen()}
          style={styles.switchModeButton}
        >
          {isSignUp
            ? "Already have an account? Sign in"
            : "Don't have an account? Sign up"}
        </Button>
      </View>
    </KeyboardAvoidingView>
  );
}
